{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./logging.service\";\nexport class UserService {\n  constructor(loggingService) {\n    this.loggingService = loggingService;\n    this.users = [{\n      name: 'José da Silva',\n      status: 'ativo'\n    }, {\n      name: 'Maria das Dores',\n      status: 'inativo'\n    }, {\n      name: 'Francisco Pereira',\n      status: 'férias'\n    }];\n  }\n  // criar usuario\n  createUser(name, status) {\n    this.users.push({\n      name: name,\n      status: status\n    });\n    this.loggingService.logStatusChange(status);\n  }\n  // atualizar status\n  updateStatus(id, status) {\n    this.users[id].status = status;\n    this.loggingService.logStatusChange(status);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.LogginService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac\n  });\n}","map":{"version":3,"names":["UserService","constructor","loggingService","users","name","status","createUser","push","logStatusChange","updateStatus","id","_","i0","ɵɵinject","i1","LogginService","_2","factory","ɵfac"],"sources":["/home/IEC/ilailsonrocha/Documents/conceitosAngular/aprendendoService/src/app/user.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { LogginService } from \"./logging.service\";\n\n@Injectable()\nexport class UserService{\n    users = [\n        { name: 'José da Silva', status: 'ativo' },\n        { name: 'Maria das Dores', status: 'inativo' },\n        { name: 'Francisco Pereira', status: 'férias' }\n    ];\n\n\n    constructor(private loggingService: LogginService){}\n\n    // criar usuario\n    createUser(name: string, status: string){\n        this.users.push({name: name, status: status});\n        this.loggingService.logStatusChange(status) \n    }\n\n    // atualizar status\n    updateStatus(id: number, status: string){\n        this.users[id].status = status;\n        this.loggingService.logStatusChange(status) \n    }\n\n\n}"],"mappings":";;AAIA,OAAM,MAAOA,WAAW;EAQpBC,YAAoBC,cAA6B;IAA7B,KAAAA,cAAc,GAAdA,cAAc;IAPlC,KAAAC,KAAK,GAAG,CACJ;MAAEC,IAAI,EAAE,eAAe;MAAEC,MAAM,EAAE;IAAO,CAAE,EAC1C;MAAED,IAAI,EAAE,iBAAiB;MAAEC,MAAM,EAAE;IAAS,CAAE,EAC9C;MAAED,IAAI,EAAE,mBAAmB;MAAEC,MAAM,EAAE;IAAQ,CAAE,CAClD;EAGkD;EAEnD;EACAC,UAAUA,CAACF,IAAY,EAAEC,MAAc;IACnC,IAAI,CAACF,KAAK,CAACI,IAAI,CAAC;MAACH,IAAI,EAAEA,IAAI;MAAEC,MAAM,EAAEA;IAAM,CAAC,CAAC;IAC7C,IAAI,CAACH,cAAc,CAACM,eAAe,CAACH,MAAM,CAAC;EAC/C;EAEA;EACAI,YAAYA,CAACC,EAAU,EAAEL,MAAc;IACnC,IAAI,CAACF,KAAK,CAACO,EAAE,CAAC,CAACL,MAAM,GAAGA,MAAM;IAC9B,IAAI,CAACH,cAAc,CAACM,eAAe,CAACH,MAAM,CAAC;EAC/C;EAAC,QAAAM,CAAA,G;qBApBQX,WAAW,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXhB,WAAW;IAAAiB,OAAA,EAAXjB,WAAW,CAAAkB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}